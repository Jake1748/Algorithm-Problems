def staircaseTraversal(height, maxSteps):
    if maxSteps == 1:
        return 1
    if height < 1:
        return 0
        
    if height == 1 or height == 2:
        return height

    # print( 'height: ', height,  '1: ',staircaseTraversal(height - 1, maxSteps), '2: ', staircaseTraversal(height - 2, maxSteps) )
    
    print(height )
    return staircaseTraversal(height - 1, maxSteps)  + staircaseTraversal(height - 2, maxSteps)

def staircaseTraversal(height, maxSteps):
    if maxSteps == 0:
        return 0

    if maxSteps == 1:
        return 1
        
    prevNumbers = {1:1, 2:2}

    return recursivehelper(height, maxSteps, prevNumbers)
    
def recursiveHelper(height, maxSteps, hash):
    if height == 0:
        return 0

    if height in hash:
        return hash[height] + recursiveHelper(height - 1, maxSteps, hash)
    elif height == maxSteps:
        return 1 + recursiveHelper(height - 1, maxSteps, hash)
    else:
        
        
